{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\computer\\\\Desktop\\\\templates\\\\shop\\\\client\\\\src\\\\Context\\\\ProductContextProvider.js\",\n  _s = $RefreshSig$();\nimport React, { act, createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  selectedItems: [],\n  productsInCheckOut: [],\n  checkout: false\n};\nconst ACTIONS = {\n  addInitialItem: 'ADD_ITEM',\n  addMore: 'INCREASE',\n  removeInitialItem: 'REMOVE',\n  removeMore: 'DECREASE',\n  checkout: 'CHECKOUT'\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.addInitialItem:\n      const existingItem = state.selectedItems.find(item => item.id === action.payload._id);\n      if (!existingItem) {\n        return {\n          ...state,\n          selectedItems: [...state.selectedItems, {\n            ...action.payload,\n            quantity: 1\n          }],\n          productsInCheckOut: [...state.productsInCheckOut, action.payload.name]\n        };\n      }\n      return state;\n    case ACTIONS.addMore:\n      const index = state.selectedItems.findIndex(item => {\n        return item._id === action.payload._id;\n      });\n      if (index !== -1) {\n        const updatedItems = [...state.selectedItems];\n        updatedItems[index] = {\n          ...updatedItems[index],\n          quantity: updatedItems[index].quantity + 1\n        };\n        return {\n          ...state,\n          selectedItems: updatedItems\n        };\n      }\n      return state;\n    case ACTIONS.removeInitialItem:\n      const newSelectedItems = state.selectedItems.filter(item => item._id !== action.payload._id);\n      const newProductsInCheckOut = state.productsInCheckOut.filter(item => item == action.payload.name);\n      return {\n        ...state,\n        selectedItems: newSelectedItems,\n        productsInCheckOut: newProductsInCheckOut\n      };\n    case ACTIONS.removeMore:\n      const indexx = state.selectedItems.findIndex(item => {\n        return item._id === action.payload._id;\n      });\n      if (indexx !== -1) {\n        const updatedItems = [...state.selectedItems];\n        updatedItems[indexx] = {\n          ...updatedItems[indexx],\n          quantity: updatedItems[indexx].quantity - 1\n        };\n        return {\n          ...state,\n          selectedItems: updatedItems\n        };\n      }\n      return state;\n    case ACTIONS.checkout:\n      return {\n        ...state,\n        checkout: true\n      };\n    default:\n      return state;\n  }\n};\nexport const ProductContext = /*#__PURE__*/createContext();\nconst ProductContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ProductContextProvider;\nexport default ProductContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ProductContextProvider\");","map":{"version":3,"names":["React","act","createContext","useReducer","jsxDEV","_jsxDEV","initialState","selectedItems","productsInCheckOut","checkout","ACTIONS","addInitialItem","addMore","removeInitialItem","removeMore","reducer","state","action","type","existingItem","find","item","id","payload","_id","quantity","name","index","findIndex","updatedItems","newSelectedItems","filter","newProductsInCheckOut","indexx","ProductContext","ProductContextProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/computer/Desktop/templates/shop/client/src/Context/ProductContextProvider.js"],"sourcesContent":["import React, { act, createContext, useReducer } from 'react';\r\n\r\n\r\nconst initialState = {\r\n    selectedItems: [],\r\n    productsInCheckOut: [],\r\n    checkout: false,\r\n    \r\n}\r\n\r\nconst ACTIONS = {\r\n    addInitialItem: 'ADD_ITEM',\r\n    addMore: 'INCREASE',\r\n    removeInitialItem: 'REMOVE',\r\n    removeMore: 'DECREASE',\r\n    checkout: 'CHECKOUT',\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.addInitialItem:\r\n            const existingItem = state.selectedItems.find(item => item.id === action.payload._id);\r\n            if (!existingItem) {\r\n                return {\r\n                    ...state,\r\n                    selectedItems: [...state.selectedItems, { ...action.payload, quantity: 1 }],\r\n                    productsInCheckOut: [...state.productsInCheckOut, action.payload.name]\r\n                };\r\n            }\r\n            return state;\r\n\r\n        case ACTIONS.addMore:\r\n            const index = state.selectedItems.findIndex(item => {\r\n                return item._id === action.payload._id;\r\n            });\r\n            if (index !== -1) {\r\n                const updatedItems = [...state.selectedItems];\r\n                updatedItems[index] = {\r\n                    ...updatedItems[index],\r\n                    quantity: updatedItems[index].quantity + 1\r\n                };\r\n                return {\r\n                    ...state,\r\n                    selectedItems: updatedItems\r\n                };\r\n            }\r\n            return state;\r\n\r\n        case ACTIONS.removeInitialItem:\r\n            const newSelectedItems = state.selectedItems.filter(item => item._id !== action.payload._id)\r\n            const newProductsInCheckOut = state.productsInCheckOut.filter(item => item == action.payload.name)\r\n\r\n            return {\r\n                ...state,\r\n                selectedItems: newSelectedItems,\r\n                productsInCheckOut: newProductsInCheckOut\r\n            }\r\n        case ACTIONS.removeMore:\r\n            const indexx = state.selectedItems.findIndex(item => {\r\n                return item._id === action.payload._id;\r\n            });\r\n            if (indexx !== -1) {\r\n                const updatedItems = [...state.selectedItems];\r\n                updatedItems[indexx] = {\r\n                    ...updatedItems[indexx],\r\n                    quantity: updatedItems[indexx].quantity - 1\r\n                };\r\n                return {\r\n                    ...state,\r\n                    selectedItems: updatedItems\r\n                };\r\n            }\r\n            return state;\r\n\r\n        case ACTIONS.checkout:\r\n            return {\r\n                ...state,\r\n                checkout: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const ProductContext = createContext();\r\nconst ProductContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    return (\r\n        <ProductContext.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </ProductContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ProductContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}